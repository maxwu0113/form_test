%{
// (c) Leica Microsystems 2015 - all rights reserved
//
//  This file defines all UCAPI unit definitions.
//  It is meant to be included via macros into another ahmconfig.xml file.
//
//  It contains unit entries for the "native" camera modules, which can be accessed
//  by "ucapi-cameras--...".
//
//  The default (first) <unit/> is "ucapi-cameras-fx" for the fx layer.
//
//
//  Input variables:
//
//  optional APP_LOGFOLDER, APP, UCAPI_LOGLEVEL mainly logging
//
//  ucfx configuration:    INCLUDE_UCAPI_INSTALLER or UCFX_LOAD_ALL or
//           individual    UCFX_LOAD_BGAPI_CAMERAS, UCFX_LOAD_DSHOW_CAMERAS, UCFX_LOAD_EZ_CAMERAS,
//                         UCFX_LOAD_UCFX_LOAD_EXAMPLE_CAMERAS, UCFX_LOAD_LEICACM_CAMERAS, UCFX_LOAD_TEMPLATE_CAMERAS
//                         UCFX_LOAD_SCREENCAPTURE_CAMERAS, UCFX_LOAD_DIJ_CAMERAS
//
//           hdr fusion plugin UCFX_LOAD_HDRFUSION_FX, UCAPI_HDRFUSION_FX_MICROSCOPE
//
//           dshow	UCDSHOW_USB_ONLY, UCDSHOW_ACCEPT_UNEXPECTED_FORMAT
//           bgapi	UCBGAPI_BGAPI_TRACE
//

 
  // when the variables APP or APP_LOGFOLDER are defined use them
  if !APP_LOGFOLDER
  	if APP
  		APP_LOGFOLDER = wrap __COMMON_APPDATA_DIR__ "\Leica Microsystems\" APP endwrap
  	endif
  endif  

  UCAPI_LOGFILE = "ucapi logfile.log"  // remove this line when you want no logging - or change file name here

  if UCAPI_LOGFILE if APP_LOGFOLDER UCAPI_LOGFILE = wrap APP_LOGFOLDER "\" UCAPI_LOGFILE endif endif

  UCAPI_DEEP_LOGGING = "1" // remove only if ucfx logging is wanted
  
  if !UCAPI_LOGFILE UCAPI_DEEP_LOGGING = "" endif // no LOGFILE => no deep logging

  if UCAPI_DEEP_LOGGING
     // prepare special filename for BGAPI (SDK) logfile
     UCBGAPI_BGAPI_LOGFILE = "BgapiTrace.Log"
     if APP_LOGFOLDER UCBGAPI_BGAPI_LOGFILE = wrap APP_LOGFOLDER "\" UCBGAPI_BGAPI_LOGFILE endwrap endif
  endif

  if !UCAPI_LOGLEVEL
    UCAPI_LOGLEVEL="2" // set to 3 or "Trace" when you want tracing
  endif

  if !UCBGAPI_BGAPI_TRACE UCBGAPI_BGAPI_TRACE="false" endif // default bgapi trace off
  if !UCAPI_SAMPLE_IMAGES_DIRECTORY UCAPI_SAMPLE_IMAGES_DIRECTORY="..\bin\Sample Images\Watch" endif
}%

%{

  // predefine INCLUDE_UCAPI_INSTALLER - when set, the installer defines, which modules ucfx will load
  if INCLUDE_UCAPI_INSTALLER
	// load "shadow config file" from camera module installer
	UCAPI_INSTALLER_DATA_DIR = wrap __COMMON_APPDATA_DIR__ "\Leica Microsystems\UCAPI" endwrap
	include wrap UCAPI_INSTALLER_DATA_DIR "\ucapi-ahmconfig.installed" endwrap
	// evaluate installed drivers - match variables
	UCFX_LOAD_BGAPI_CAMERAS    = UCAPI_ENABLED_UC_BGAPI
	UCFX_LOAD_DSHOW_CAMERAS    = UCAPI_ENABLED_UC_DSHOW
	UCFX_LOAD_EZ_CAMERAS       = UCAPI_ENABLED_UC_EZ
	UCFX_LOAD_LEICACM_CAMERAS  = UCAPI_ENABLED_UC_LEICACM
	UCFX_LOAD_EXAMPLE_CAMERAS  = UCAPI_ENABLED_UC_EXAMPLE
	UCFX_LOAD_DIJ_CAMERAS 		= UCAPI_ENABLED_UC_DIJ
  endif

  // predefine UCFX_LOAD_ALL to load all known modules - mainly for testing
  if UCFX_LOAD_ALL
	// ucfx configuration
	UCFX_LOAD_EXAMPLE_CAMERAS       = "1"
	UCFX_LOAD_BGAPI_CAMERAS         = "1"
	UCFX_LOAD_DSHOW_CAMERAS         = "1"
	UCFX_LOAD_EZ_CAMERAS            = "1"  	
	UCFX_LOAD_LEICACM_CAMERAS       = "1"
	UCFX_LOAD_SCREENCAPTURE_CAMERAS = "1" 
	UCFX_LOAD_TEMPLATE_CAMERAS      = "1"
	UCFX_LOAD_DIJ_CAMERAS 			= "1"
  endif
}%

	<!-- fx layer - default root unit -->

	<unit name="ucapi-cameras-fx" id="UCAPI-DRIVER" detect="*" driver="ucFx.dll">
		<parameters>
			<driver-config loglevel="%{UCAPI_LOGLEVEL}%"/>
			%{ if UCFX_LOAD_EXAMPLE_CAMERAS }%<ref-unit name="ucapi-cameras-example"/>%{ endif }%
			%{ if UCFX_LOAD_BGAPI_CAMERAS }%<ref-unit name="ucapi-cameras-bgapi"/>%{ endif }%
			%{ if UCFX_LOAD_DSHOW_CAMERAS }%<ref-unit name="ucapi-cameras-dshow"/>%{ endif }%
			%{ if UCFX_LOAD_EZ_CAMERAS }%<ref-unit name="ucapi-cameras-ez"/>%{ endif }%
			%{ if UCFX_LOAD_LEICACM_CAMERAS }%<ref-unit name="ucapi-cameras-leicacm"/>%{ endif }%
			%{ if UCFX_LOAD_SCREENCAPTURE_CAMERAS}%<ref-unit name="ucapi-cameras-screencapture"/>%{ endif }%
			%{ if UCFX_LOAD_TEMPLATE_CAMERAS }%<ref-unit name="ucapi-cameras-template"/>%{ endif }%
			%{ if UCFX_LOAD_DIJ_CAMERAS }%<ref-unit name="ucapi-cameras-dij"/>%{ endif }%
			<!-- Plug-In Extensions -->
			%{ if UCFX_LOAD_HDRFUSION_FX }%<ref-unit name="ucapi-hdrfusion-fx"/>%{ endif }%
			<!--  ucfx logger parameter -->
			%{ if UCAPI_LOGFILE }%<ref-unit name="ucapi-logger" />%{ endif }%
    		</parameters>
	</unit>

	<!-- all known "native" ucapi camera modules -->

	<unit name="ucapi-cameras-example" id="UCAPI-DRIVER" detect="*" driver="ucExample.dll">
		<parameters>
		<driver-config loglevel="%{UCAPI_LOGLEVEL}%" sample-images-directory="%{UCAPI_SAMPLE_IMAGES_DIRECTORY}%"/>
          	<!--  ucExample shares logger parameter -->
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>

	<unit name="ucapi-cameras-bgapi" id="UCAPI-DRIVER" detect="*" driver="ucBgapi.dll">
		<parameters>
		<!-- special driver-config for bgapi - allow individual bgapi-logfile -->
		<driver-config loglevel="%{UCAPI_LOGLEVEL}%"
%{ if UCBGAPI_BGAPI_LOGFILE }%
			bgapi-logfile="%{UCBGAPI_BGAPI_LOGFILE}%" bgapi-trace="%{UCBGAPI_BGAPI_TRACE}%"
%{ endif }%
		/>
          	<!--  ucBgapi shares logger parameter -->
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>
	
	<unit name="ucapi-cameras-dshow" id="UCAPI-DRIVER" detect="*" driver="ucDShow.dll">
		<parameters>
		<driver-config loglevel="%{UCAPI_LOGLEVEL}%" usb-only="%{UCDSHOW_USB_ONLY}%" accept-unexpected-format="%{UCDSHOW_ACCEPT_UNEXPECTED_FORMAT}%"/>
          	<!--  ucDshow shares logger parameter -->
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>

	<unit name="ucapi-cameras-dij" id="UCAPI-DRIVER" detect="*" driver="ucDij.dll">
		<parameters>
		<driver-config loglevel="%{UCAPI_LOGLEVEL}%"/>
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>

	<unit name="ucapi-cameras-ez" id="UCAPI-DRIVER" detect="*" driver="ucEZ.dll">
		<parameters>
		<!--  capture-count-threshold-to-restart-camera: max allowed value is 65535; 0 means feature is disabled.   -->
		<driver-config still-capture-extra-delay-ms="200" capture-count-threshold-to-restart-camera="0" wait-seconds-to-complete-camera-restart="10" loglevel="%{UCAPI_LOGLEVEL}%"/>
          	<!--  ucEZ shares logger parameter -->
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>


	<unit name="ucapi-cameras-leicacm" id="UCAPI-DRIVER" detect="*" driver="ucLeicaCM.dll">
		<parameters>
		<driver-config loglevel="%{UCAPI_LOGLEVEL}%"/>
          	<!--  ucLeicaCM shares logger parameter -->
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>

	<unit name="ucapi-cameras-screencapture" id="UCAPI-DRIVER" detect="*" driver="ucScreenCapture.dll">
		<parameters>
		<driver-config loglevel="%{UCAPI_LOGLEVEL}%"/>
          	<!--  ucScreenCapture shares logger parameter -->
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>

	<unit name="ucapi-cameras-template" id="UCAPI-DRIVER" detect="*" driver="ucTemplate.dll">
		<parameters>
		<driver-config loglevel="%{UCAPI_LOGLEVEL}%"/>
          	<!--  ucTemplate shares logger parameter -->
		%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>

	<!-- fx plugins -->

	<!-- ucHDRFusion FX Plug-In -->
	<unit name="ucapi-hdrfusion-fx" id="ucHDRFusionFx" detect="*" driver="ucHdrFusionFx.dll">
		<parameters>
			<driver-config loglevel="%{UCAPI_LOGLEVEL}%"/>
			%{ if UCAPI_HDRFUSION_FX_MICROSCOPE}%
			<ref-unit name="%{UCAPI_HDRFUSION_FX_MICROSCOPE}%"/> <!-- unit for sirius microscope has to be defined outside -->
			%{ endif }%
			%{ if UCAPI_DEEP_LOGGING }%<ref-unit name="ucapi-logger" />%{ endif }%
		</parameters>
	</unit>


	<!-- ucapi shared logger -->

	<unit name="ucapi-logger" id="LOGGER" driver="logger.dll">
		<parameters>
			<logger-config logfile="%{UCAPI_LOGFILE}%"/>
			%{ if LIVE_LOGGING }%
			<ref-unit name="live-logging-channel"/>
			%{ endif }%
		</parameters>
	</unit>
